diff --git a/TODO.md b/TODO.md
index b40ba2b..90cbe8e 100644
--- a/TODO.md
+++ b/TODO.md
@@ -20,27 +20,26 @@
 * [x] 3.3
 * [x] 3.4
 * [x] 3.5
-* [ ] 3.6
+* [x] 3.6
 * [x] 3.7
 
-* [ ] 4
-* [ ] 4.1
-* [ ] 4.2
-* [ ] 4.3
-* [ ] 4.3
-* [ ] 4.4
-* [ ] 4.5
+* [x] 4
+* [x] 4.1
+* [x] 4.2
+* [x] 4.3
+* [x] 4.4
+* [x] 4.5
 
 * [ ] 5
-* [ ] 5.1
-* [ ] 5.2
+* [x] 5.1
+* [x] 5.2
 * [ ] 5.3
-* [ ] 5.4
-* [ ] 5.5
+* [x] 5.4
+* [x] 5.5
 * [ ] 5.6
 * [ ] 5.7
 * [ ] 5.8
-* [ ] 5.9
+* [x] 5.9
 * [ ] 5.10
 * [ ] 5.11
 
diff --git a/index.html b/index.html
index d1a8db5..6cd5a84 100644
--- a/index.html
+++ b/index.html
@@ -243,7 +243,7 @@
   </template>
 
   <!-- Метка объявления -->
-  <template id="pinTemplate">
+  <template id="pin">
     <button type="button" class="map__pin" style="left: 200px; top: 400px;"><img src="img/avatars/user07.png" width="40" height="40" draggable="false" alt="Метка объявления" tabindex="1"></button>
   </template>
 
@@ -276,7 +276,8 @@
   <script src="js/map.js"></script>
   <script src="js/adForm.js"></script>
   <script src="js/filtersForm.js"></script>
-  <script src="js/page.js"></script>
   <script src="js/mainPin.js"></script>
+  <script src="js/ads.js"></script>
+  <script src="js/page.js"></script>
 </body>
 </html>
diff --git a/js/adForm.js b/js/adForm.js
index f8f320a..625f5cc 100644
--- a/js/adForm.js
+++ b/js/adForm.js
@@ -1,6 +1,6 @@
 'use strict';
 
-var minPriceMap = {
+var MinPriceMap = {
   BUNGALO: 0,
   FLAT: 1000,
   HOUSE: 5000,
@@ -47,7 +47,29 @@ var minPriceMap = {
   // выставляется при перемещении метки .map__pin--main по карте. Подробности
   // заполнения поля адреса, описаны вместе с поведением метки.
   var setFormAddress = function(x, y) {
-    formAddress.value = x + ', ' + y;
+    formAddress.value = Math.round(x) + ', ' + Math.round(y);
+  };
+
+  var getCustomValidationMessage = function(roomNumber, capacity) {
+    var message = '';
+
+    if (roomNumber === 1 && !(capacity > 0 && capacity <= 1)) {
+      message = '1 комната — «для 1 гостя»';
+    }
+
+    if (roomNumber === 2 && !(capacity > 0 && capacity <= 2)) {
+      message = '2 комнаты — «для 2 гостей» или «для 1 гостя»';
+    }
+
+    if (roomNumber === 3 && !(capacity > 0 && capacity <= 3)) {
+      message = '3 комнаты — «для 3 гостей», «для 2 гостей» или «для 1 гостя»';
+    }
+
+    if (roomNumber === 100 && capacity !== 0) {
+      message = '100 комнат — «не для гостей»';
+    }
+
+    return message;
   };
 
   // 2.5. При успешной отправке формы страница, не перезагружаясь, переходит в изначальное неактивное состояние, а также:
@@ -57,9 +79,6 @@ var minPriceMap = {
   // значение поля адреса корректируется соответственно положению метки.
   var onSuccessSave = function () {
     window.page.deactivatePage();
-    window.adForm.resetForm();
-    window.filtersForm.resetForm();
-    window.mainPin.resetPin();
   };
 
   var onErrorSave = function () {};
@@ -79,9 +98,6 @@ var minPriceMap = {
   // значение поля адреса корректируется соответственно положению метки;
   formResetElement.addEventListener('click', function (evt) {
     window.page.deactivatePage();
-    window.adForm.resetForm();
-    window.filtersForm.resetForm();
-    window.mainPin.resetPin();
   });
 
   // 3.3. Поле «Тип жилья» влияет на минимальное значение поля «Цена за ночь»:
@@ -92,7 +108,7 @@ var minPriceMap = {
   //
   // > Обратите внимание: вместе с минимальным значением цены нужно изменять и плейсхолдер.
   formType.addEventListener('change', function(evt) {
-    var min = minPriceMap[evt.target.value.toUpperCase()];
+    var min = MinPriceMap[evt.target.value.toUpperCase()];
     formPrice.setAttribute('min', min);
     formPrice.setAttribute('placeholder', min);
   });
@@ -119,7 +135,19 @@ var minPriceMap = {
   // > значений поля «Количество мест»: удаление из разметки соответствующих
   // > элементов option, добавление элементам option состояния disabled или
   // > другие способы ограничения, например, с помощью метода setCustomValidity.
-  formRoomNumber.addEventListener('change', function(evt) {});
+  formRoomNumber.addEventListener('change', function(evt) {
+    var message = getCustomValidationMessage(Number(evt.target.value), Number(formCapacity.value));
+    formCapacity.setCustomValidity(message);
+  });
+
+  formCapacity.addEventListener('change', function(evt) {
+    var message = getCustomValidationMessage(Number(formRoomNumber.value), Number(evt.target.value));
+    formCapacity.setCustomValidity(message);
+  });
+
+  formCapacity.setCustomValidity(
+    getCustomValidationMessage(Number(formRoomNumber.value), formCapacity.value)
+  );
 
   window.adForm = {
     activateForm: activateForm,
diff --git a/js/ads.js b/js/ads.js
new file mode 100644
index 0000000..3ae38a7
--- /dev/null
+++ b/js/ads.js
@@ -0,0 +1,146 @@
+'use strict';
+
+(function () {
+  var TypeMap = {
+    FLAT: 'Квартира',
+    BUNGALO: 'Бунгало',
+    HOUSE: 'Дом',
+    PALACE: 'Дворец',
+  };
+  var ads = [];
+  var mapElement = document.querySelector('.map');
+  var mapPinsElement = document.querySelector('.map__pins');
+  var pinTemplate = document.querySelector('#pin').content.querySelector('.map__pin');
+
+  var removeCard = function () {
+    var card = document.querySelector('.map__card');
+    if (card) {
+      card.remove();
+    }
+  };
+
+  var removePins = function () {
+    var pins = mapPinsElement.querySelectorAll('.map__pin');
+    for(var i = 0; i < pins.length; i++) {
+      if (pins[i].classList.contains('map__pin--main')) {
+        continue;
+      }
+
+      pins[i].remove();
+    }
+  };
+
+  var deactivatePins = function () {
+    var pins = document.querySelectorAll('.map__pin--active');
+    for(var i = 0; i < pins.length; i++) {
+      pins[i].classList.remove('map__pin--active');
+    }
+  };
+
+  var renderCard = function (ad) {
+    var cardTemplate = document.querySelector('#card').content.querySelector('.map__card');
+    var card = cardTemplate.cloneNode(true);
+
+    var cardAvatarElement = card.querySelector('.popup__avatar');
+    var cardCloseElement = card.querySelector('.popup__close');
+    var cardTitleElement = card.querySelector('.popup__title');
+    var cardAddressElement = card.querySelector('.popup__text--address');
+    var cardPriceElement = card.querySelector('.popup__text--price');
+    var cardTypeElement = card.querySelector('.popup__type');
+    var cardCapacityElement = card.querySelector('.popup__text--capacity');
+    var cardTimeElement = card.querySelector('.popup__text--time');
+    var cardFeaturesElement = card.querySelector('.popup__features');
+    var cardDescriptionElement = card.querySelector('.popup__description');
+    var cardPhotosElement = card.querySelector('.popup__photos');
+    var cardPhotoElement = cardPhotosElement.querySelector('.popup__photo');
+
+
+    cardTitleElement.textContent = ad.offer.title;
+    cardAddressElement.textContent = ad.offer.address;
+    cardPriceElement.textContent = ad.offer.price + '₽/ночь';
+    cardTypeElement.textContent = TypeMap[ad.offer.type.toUpperCase()];
+    cardCapacityElement.textContent = ad.offer.rooms + ' комнаты для ' + ad.offer.guests + ' гостей';
+    cardTimeElement.textContent = 'Заезд после ' + ad.offer.checkin + ', выезд до ' + ad.offer.checkout;
+    cardDescriptionElement.textContent = ad.offer.description;
+    cardAvatarElement.setAttribute('src', ad.author.avatar);
+
+    if (!ad.offer.features.includes('wifi')) {
+      cardFeaturesElement.querySelector('.popup__feature--wifi').remove();
+    }
+
+    if (!ad.offer.features.includes('dishwasher')) {
+      cardFeaturesElement.querySelector('.popup__feature--dishwasher').remove();
+    }
+
+    if (!ad.offer.features.includes('parking')) {
+      cardFeaturesElement.querySelector('.popup__feature--parking').remove();
+    }
+
+    if (!ad.offer.features.includes('washer')) {
+      cardFeaturesElement.querySelector('.popup__feature--washer').remove();
+    }
+
+    if (!ad.offer.features.includes('elevator')) {
+      cardFeaturesElement.querySelector('.popup__feature--elevator').remove();
+    }
+
+    if (!ad.offer.features.includes('conditioner')) {
+      cardFeaturesElement.querySelector('.popup__feature--conditioner').remove();
+    }
+
+    var fragment = document.createDocumentFragment();
+    for(var i = 0; i < ad.offer.photos.length; i++) {
+      var img = cardPhotoElement.cloneNode(true);
+      img.setAttribute('src', ad.offer.photos[i]);
+      fragment.appendChild(img);
+    }
+    cardPhotosElement.appendChild(fragment);
+    cardPhotoElement.remove();
+
+    mapElement.appendChild(card);
+  };
+
+  var createPin = function (ad) {
+    var pin = pinTemplate.cloneNode(true);
+    var pinAvatar = pin.querySelector('img');
+
+    pin.style.left = ad.location.x + 'px';
+    pin.style.top = ad.location.y + 'px';
+
+    pinAvatar.setAttribute('src', ad.author.avatar);
+    pinAvatar.setAttribute('alt', ad.offer.title);
+
+    pin.addEventListener('click', function() {
+      deactivatePins();
+      removeCard();
+      renderCard(ad);
+      pin.classList.add('map__pin--active');
+    });
+
+    return pin;
+  };
+
+  var renderPins = function (ads) {
+    var fragment = document.createDocumentFragment();
+
+    for (var i = 0; i < ads.length; i ++) {
+      if (ads[i].offer) {
+        var pin = createPin(ads[i]);
+        fragment.appendChild(pin);
+      }
+    }
+
+    mapPinsElement.appendChild(fragment);
+  };
+
+  var onLoad = function (response) {
+    ads = response;
+    renderPins(ads);
+  }
+
+  window.ads = {
+    onLoad: onLoad,
+    removePins: removePins,
+    removeCard: removeCard,
+  };
+})();
diff --git a/js/backend.js b/js/backend.js
index e4b15ba..604c0be 100644
--- a/js/backend.js
+++ b/js/backend.js
@@ -9,7 +9,7 @@ var SAVE_URL = 'https://javascript.pages.academy/keksobooking';
     xhr.responseType = 'json';
     xhr.addEventListener('load', function () {
       if (xhr.status === 200) {
-        onSuccess(xhr);
+        onSuccess(xhr.response);
       } else {
         onError('Что-то пошло не так');
       }
diff --git a/js/mainPin.js b/js/mainPin.js
index 5511f58..0001f62 100644
--- a/js/mainPin.js
+++ b/js/mainPin.js
@@ -1,6 +1,13 @@
 'use strict';
 
 (function () {
+  var PIN_WIDTH = 65;
+  var PIN_HEIGHT = 70;
+  var PIN_MIN_X = 0;
+  var PIN_MAX_X = 1200;
+  var PIN_MIN_Y = 130;
+  var PIN_MAX_Y = 630;
+
   var mainPinElement = document.querySelector('.map__pin--main');
 
   var INITIAL_X = mainPinElement.offsetLeft;
@@ -32,14 +39,29 @@
         y: moveEvt.clientY
       };
 
+      if (mainPinElement.offsetLeft < PIN_MIN_X) {
+        mainPinElement.style.left = PIN_MIN_X - PIN_WIDTH / 2 + 'px';
+      }
+
+      if (mainPinElement.offsetLeft > PIN_MAX_X - PIN_WIDTH / 2) {
+        mainPinElement.style.left = PIN_MAX_X - PIN_WIDTH / 2 + 'px';
+      }
+
+      if (mainPinElement.offsetTop < PIN_MIN_Y) {
+        mainPinElement.style.top = PIN_MIN_Y + 'px';
+      }
+
+      if (mainPinElement.offsetTop > PIN_MAX_Y) {
+        mainPinElement.style.top = PIN_MAX_Y + 'px';
+      }
+
       var x = (mainPinElement.offsetLeft - shift.x);
       var y = (mainPinElement.offsetTop - shift.y);
 
       mainPinElement.style.left = x + 'px';
       mainPinElement.style.top = y + 'px';
 
-      // FIXME: координаты острого конца метки
-      window.adForm.setFormAddress(x, y);
+      window.adForm.setFormAddress(x + PIN_WIDTH / 2 , y + PIN_HEIGHT);
     };
 
     var onMouseUp = function (upEvt) {
@@ -57,11 +79,11 @@
 
   mainPinElement.addEventListener('mousedown', onMouseDown);
 
-  window.adForm.setFormAddress(INITIAL_X, INITIAL_Y);
-
   window.mainPin = {
     INITIAL_X: INITIAL_X,
     INITIAL_Y: INITIAL_Y,
+    PIN_WIDTH: PIN_WIDTH,
+    PIN_HEIGHT: PIN_HEIGHT,
     resetPin: resetPin,
   };
 })();
diff --git a/js/page.js b/js/page.js
index c0919b2..240ebf8 100644
--- a/js/page.js
+++ b/js/page.js
@@ -1,22 +1,60 @@
 'use strict';
 
 (function () {
+  var pageIsActive = false;
+
   var activatePage = function() {
-    window.map.activateMap();
-    window.adForm.activateForm();
-    window.adForm.enableFormFieldSets();
-    window.filtersForm.enableFiltersFormFieldSets();
-    window.filtersForm.enableFiltersFormSelects();
+    if (pageIsActive === false) {
+      window.map.activateMap();
+
+      window.adForm.activateForm();
+      window.adForm.enableFormFieldSets();
+      window.adForm.setFormAddress(
+        window.mainPin.INITIAL_X + window.mainPin.PIN_WIDTH / 2,
+        window.mainPin.INITIAL_Y + window.mainPin.PIN_HEIGHT
+      );
+
+      window.backend.load(
+        function (response) {
+          window.ads.onLoad(response)
+
+          window.filtersForm.enableFiltersFormFieldSets();
+          window.filtersForm.enableFiltersFormSelects();
+        },
+        function () {}
+      );
+
+      pageIsActive = true;
+    }
   };
 
   var deactivatePage = function() {
-    window.map.deactivateMap();
-    window.adForm.deactivateForm();
-    window.adForm.disableFormFieldSets();
-    window.filtersForm.disableFiltersFormFieldSets();
-    window.filtersForm.disableFiltersFormSelects();
+    if (pageIsActive === true) {
+      window.map.deactivateMap();
+
+      window.adForm.deactivateForm();
+      window.adForm.disableFormFieldSets();
+      window.adForm.resetForm();
+      window.adForm.setFormAddress(
+        window.mainPin.INITIAL_X + window.mainPin.PIN_WIDTH / 2,
+        window.mainPin.INITIAL_Y + window.mainPin.PIN_WIDTH / 2
+      );
+
+      window.filtersForm.disableFiltersFormFieldSets();
+      window.filtersForm.disableFiltersFormSelects();
+      window.filtersForm.resetForm();
+
+      window.ads.removeCard();
+      window.ads.removePins();
+
+      window.mainPin.resetPin();
+
+      pageIsActive = false;
+    }
   };
 
+  deactivatePage();
+
   window.page = {
     activatePage: activatePage,
     deactivatePage: deactivatePage,
